{
    "collab_server" : "",
    "contents" : "---\ntitle: \"An Introduction to ggplot2 Part Two:  Legends\"\nauthor: \"Jeff Atkins\"\ndate: \"October 24, 2017\"\noutput: html_document\n---\n  \n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n* For everything in this section, and for a lot of things moving forward, I have always found the [R Graphics Cookbook from Winston Chang](http://www.cookbook-r.com/Graphs/) to be invaluable. Most things are online, but buy it if ya can.\n&nbsp;\n\n&nbsp;\n\n\n#### Begin by Initating ggplot2\n\n```{r require-ggplot2, echo = FALSE, message = FALSE}\nrequire(ggplot2)\n```\n\n## Legends\nYou have already succesfully made some pretty amazing plots using the `iris` dataset. Now it is time we really make them our own. One of the great things about ggplot2 (and R too) is not only can we express our data in a clear and concise manner, we can also personalize and customize those plots. Here is our plot from earlier:\n\n```{r remembering-plot}\nggplot(iris, aes(x = Petal.Width, y = Petal.Length, color = Species))+\n  geom_point(size = 4, alpha = 0.5)+\n  xlab(\"Petal Width (cm)\")+\n  ylab(\"Petal Length (cm)\")+\n  theme_classic()\n```\n\nNot a fan of a legend to the side? No problem. If you use the very powerful `theme()` code, you can do some cool stuff. \n\n```{r legend-top}\nggplot(iris, aes(x = Petal.Width, y = Petal.Length, color = Species))+\n  geom_point(size = 4, alpha = 0.5)+\n  xlab(\"Petal Width (cm)\")+\n  ylab(\"Petal Length (cm)\")+\n  theme_classic()+\n  theme(legend.position = \"top\")\n```\n\n\n```{r legend-bottom}\nggplot(iris, aes(x = Petal.Width, y = Petal.Length, color = Species))+\n  geom_point(size = 4, alpha = 0.5)+\n  xlab(\"Petal Width (cm)\")+\n  ylab(\"Petal Length (cm)\")+\n  theme_classic()+\n  theme(legend.position = \"bottom\")\n```\n\n\n```{r inset1}\nggplot(iris, aes(x = Petal.Width, y = Petal.Length, color = Species))+\n  geom_point(size = 4, alpha = 0.5)+\n  xlab(\"Petal Width (cm)\")+\n  ylab(\"Petal Length (cm)\")+\n  theme_classic()+\n  theme(legend.justification=c(0,0), legend.position=c(0,0)) # Put bottom-left corner of legend box in bottom-left corner of graph\n```\n\n\n```{r inset2}\nggplot(iris, aes(x = Petal.Width, y = Petal.Length, color = Species))+\n  geom_point(size = 4, alpha = 0.5)+\n  xlab(\"Petal Width (cm)\")+\n  ylab(\"Petal Length (cm)\")+\n  theme_classic()+\n theme(legend.justification=c(1,0), legend.position=c(1,0)) # Put bottom-right corner of legend box in bottom-right corner of graph\n```\n&nbsp;\n\n&nbsp;\n\n\nBut wait, there's more! We can change around what our legend looks like and even change the color scheme of our data\n\n```{r fun-time}\nggplot(iris, aes(x = Petal.Width, y = Petal.Length, color = Species))+\n  geom_point(size = 4, alpha = 0.5)+\n  xlab(\"Petal Width (cm)\")+\n  ylab(\"Petal Length (cm)\")+\n  theme_classic()+\n  scale_color_manual(values=c(\"#999999\", \"#E69F00\", \"#56B4E9\"))+\n theme(legend.justification=c(1,0), \n       legend.position=c(1,0),\n       legend.background = element_rect(fill=\"grey\"))\n```\n                   \n                   \n```{r fun-time2}\nggplot(iris, aes(x = Petal.Width, y = Petal.Length, color = Species))+\n  geom_point(size = 4, alpha = 0.5)+\n  xlab(\"Petal Width (cm)\")+\n  ylab(\"Petal Length (cm)\")+\n  theme_classic()+\n  scale_color_manual(values=c(\"#999999\", \"#E69F00\", \"#56B4E9\"), \n                       name=\"Species\",\n                       breaks=c(\"setosa\", \"versicolor\", \"virginica\"),\n                       labels=c(\"setosa\", \"versicolor\", \"virginica\"))+\n theme(legend.justification=c(1,0), \n       legend.position=c(1,0))\n```      \n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n\n#### Challenge!\n\nWith all of this new found knowledge, using the `iris` dataset, I want you to produce the ugliest plot you can. \n",
    "created" : 1508903367397.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "912785420",
    "id" : "DAEA1BFA",
    "lastKnownWriteTime" : 1508903511,
    "last_content_update" : 1508903511694,
    "path" : "C:/github/ggplot2_workshop/R/ggplot2_workshop_two_legends_and_more.Rmd",
    "project_path" : "R/ggplot2_workshop_two_legends_and_more.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}